# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: windows-latest

strategy:
  matrix:
    Python310:
      python.version: '3.10'
    Python311:
      python.version: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    addToPath: true
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install Python dependencies'

- powershell: |
    if (Test-Path "dist\automation.exe") {
      Remove-Item "dist\automation.exe"
    }
  displayName: "Remove existing Automation"

- script: |
    pyinstaller --onefile automation_task.py
  displayName: 'Build .exe from Python script'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: dist
    artifact: automation_exe
    publishLocation: pipeline
  displayName: 'Publish .exe as Artifact'

